# configuration for Elasticsearch resources
  
config:
  # ES indexer bolt
  # Transport client will be used if at least one address is specified
  # Node client will be used otherwise
  es.indexer.addresses: "localhost:9300"
  es.indexer.index.name: "index"
  es.indexer.doc.type: "doc"
  es.indexer.cluster.name: "elasticsearch"
  es.indexer.create: false
  
  # ES metricsConsumer
  # Transport client will be used if at least one address is specified
  # Node client will be used otherwise
  es.metrics.addresses: "localhost"
  es.metrics.index.name: "metrics"
  es.metrics.doc.type: "datapoint"
  es.metrics.cluster.name: "elasticsearch"
  
  # ES metrics whitelist. Only metrics in this list will be written to ES
  # es.metrics.whitelist:
  # - fetcher_counter
  # - fetcher_average.bytes_fetched
  
  # ES metrics blacklist. Never write these metrics to ES
  # es.metrics.blacklist:
  # - __receive.capacity
  # - __receive.read_pos
  
  # ES spout and persistence bolt
  es.status.addresses: "localhost"
  es.status.index.name: "status"
  es.status.doc.type: "status"
  es.status.routing: true
  es.status.routing.fieldname: "metadata.hostname"
  es.status.bulkActions: 100
  es.status.concurrentRequests: 5
  es.status.flushInterval: "5s"
  
  # used by spouts - time in secs for which the URLs will be considered for fetching after a ack of fail
  es.status.ttl.purgatory: 5
  
  # Min time (in msecs) to allow between 2 successive queries to ES
  es.status.min.delay.queries: 2500
  
  # ElasticSearchSpout
  # ES Spout throttling. Uses configuration of URLPartitionerBolt for the bucket key.
  es.status.max.inflight.urls.per.bucket: -1
  es.status.sort.field: "nextFetchDate"
  # limits the deep paging by resetting the start offset for the ES query 
  es.status.max.secs.date: 100
  
  # AggregationSpout
  es.status.max.buckets: 25
  es.status.max.urls.per.bucket: 2
  # field to group the URLs into buckets
  es.status.bucket.field: "_routing"
  # field to sort the URLs within a bucket
  es.status.bucket.sort.field: "nextFetchDate"
  # field to sort the buckets
  es.status.global.sort.field: "nextFetchDate"
