# configuration for Elasticsearch resources
  
config:
  # ES indexer bolt
  es.indexer.addresses: "localhost:9300"
  es.indexer.index.name: "index"
  es.indexer.doc.type: "doc"
  es.indexer.create: false
  es.indexer.settings:
    cluster.name: "elasticsearch"
  
  # ES metricsConsumer
  es.metrics.addresses: "localhost:9300"
  es.metrics.index.name: "metrics"
  es.metrics.doc.type: "datapoint"
  es.metrics.settings:
    cluster.name: "elasticsearch"
  
  # ES metrics whitelist. Only metrics in this list will be written to ES
  # es.metrics.whitelist:
  # - fetcher_counter
  # - fetcher_average.bytes_fetched
  
  # ES metrics blacklist. Never write these metrics to ES
  # es.metrics.blacklist:
  # - __receive.capacity
  # - __receive.read_pos
  
  # ES spout and persistence bolt
  es.status.addresses: "localhost:9300"
  es.status.index.name: "status"
  es.status.doc.type: "status"
  # the routing is done on the value of 'partition.url.mode'
  es.status.routing: true
  es.status.routing.fieldname: "metadata.hostname"
  es.status.bulkActions: 500
  es.status.concurrentRequests: 1
  es.status.flushInterval: "5s"
  es.status.settings:
    cluster.name: "elasticsearch"
  
  # used by spouts - time in secs for which the URLs will be considered for fetching after a ack of fail
  es.status.ttl.purgatory: 5
  
  # Min time (in msecs) to allow between 2 successive queries to ES
  es.status.min.delay.queries: 1000
   
  # AggregationSpout
  es.status.max.buckets: 250
  es.status.max.urls.per.bucket: 4
  # field to group the URLs into buckets
  es.status.bucket.field: "metadata.hostname"
  # field to sort the URLs within a bucket
  es.status.bucket.sort.field: "nextFetchDate"
  # field to sort the buckets
  es.status.global.sort.field: "nextFetchDate"

  # CollapsingSpout : limits the deep paging by resetting the start offset for the ES query 
  es.status.max.secs.date: 100
  
  # AggregationSpout : sampling improves the performance on large crawls
  es.status.sample: false

  topology.metrics.consumer.register:
       - class: "com.digitalpebble.stormcrawler.elasticsearch.metrics.MetricsConsumer"
         parallelism.hint: 1
